<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>git on Mein Schmierzettel</title>
    <link>https://kaiserbarbarossa.github.io/tags/git/</link>
    <description>Recent content in git on Mein Schmierzettel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-de</language>
    <lastBuildDate>Wed, 07 Jul 2021 09:28:44 +0200</lastBuildDate><atom:link href="https://kaiserbarbarossa.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mein Problem mit Github</title>
      <link>https://kaiserbarbarossa.github.io/post/2021/07/07/mein-problem-mit-github/</link>
      <pubDate>Wed, 07 Jul 2021 09:28:44 +0200</pubDate>
      
      <guid>https://kaiserbarbarossa.github.io/post/2021/07/07/mein-problem-mit-github/</guid>
      <description>&lt;p&gt;Microsoft hat ein echtes Talent, sich bei seinen Benutzern unbeliebt zu machen. Respekt!&lt;/p&gt;
&lt;p&gt;Das Github nicht Open-Source ist und von Microsoft gekauft wurde, war mir bewusst und ich hoste trotzdem meinen Code und auch diesen Blog auf Github. Mal sehen, wie lange noch.&lt;/p&gt;
&lt;p&gt;In den Augen der Redmonder ist echtes Programmieren also überflüssig und man schreibt eine &lt;em&gt;ganz tolle&lt;/em&gt; &amp;ldquo;Künstliche Intelligenz&amp;rdquo;, die nun Projekte auf Github durchsucht und den entsprechenden Code liefert. Warum sollte die KI, die &lt;strong&gt;Open-Source-Software&lt;/strong&gt; durchsucht, nicht auch freie Software sein? Am Ende wird die ja auch von einer KI kopiert. Nein, das ginge ja ganz und gar nicht!&lt;/p&gt;
&lt;p&gt;Ich schreibe also Programme, stelle sie unter die GPL und weiß nicht, ob diese &amp;ldquo;Intelligenz&amp;rdquo; nicht meinen Code irgendwo anders vorschlägt. Da könnte ich mir dann auch die GPL sparen. Ich bin aber auch kein Lizenz-Experte&amp;hellip;&lt;/p&gt;
&lt;p&gt;Ich gehe also davon aus, dass meine Projekte und dieser Blog in Kürze auf eine andere Plattform umziehen. Ob dies dann aber eine bereits bestehende Gitlab- oder Gitea-Instanz wird oder ob ich da nicht selbst etwas hoste, da bin ich mir aber noch nicht sicher.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Launchpad vs. Github</title>
      <link>https://kaiserbarbarossa.github.io/post/2021/02/18/launchpad-vs-github/</link>
      <pubDate>Thu, 18 Feb 2021 07:53:10 +0100</pubDate>
      
      <guid>https://kaiserbarbarossa.github.io/post/2021/02/18/launchpad-vs-github/</guid>
      <description>&lt;p&gt;Sowohl Launchpad als auch Github sind Webanwendungen auf denen man seine Projekte verwalten kann. Außerdem gibt es noch andere Anwendungen wie zum Beispiel Gitlab etc.&lt;/p&gt;
&lt;h1 id=&#34;disclaimer&#34;&gt;Disclaimer&lt;/h1&gt;
&lt;p&gt;ACHTUNG!!!&lt;/p&gt;
&lt;p&gt;Es besteht die Möglichkeit, dass dieser Post eigene Meinung enthält.&lt;/p&gt;
&lt;h1 id=&#34;github&#34;&gt;Github&lt;/h1&gt;
&lt;p&gt;Github hat den großen Vorteil, dass es von enorm vielen Menschen benutzt wird. Dadurch hat man automatisch sehr viele potentielle Mithelfer an seinem Open Source-Projekt. Der wahrscheinlich größte Nachteil Githubs ist, dass es Closed Source ist (und dass es zu M$ gehört ]:-) ) Allerdings ist es nicht mehr so wie früher, dass man bei GitHub sehr zur Kasse gebeten wird. Eigentlich kann man alles, was man normalerweise braucht auch kostenlos erledigen.&lt;/p&gt;
&lt;h1 id=&#34;launchpad&#34;&gt;Launchpad&lt;/h1&gt;
&lt;p&gt;Launchpad wurde von Canonical, also der Firma hinter Ubuntu, entwickelt.&lt;/p&gt;
&lt;p&gt;Launchpad unterstützt im Gegensatz zu GitHub nicht nur Git als Versionskontrollsystem, sondern auch Bazaar nativ und kann fremde Repos z.B. von Github importieren.&lt;/p&gt;
&lt;p&gt;Launchpad selber unterstützt Git und Bazaar, aber man kann auch Subversion- oder CVS-Repos importieren. Launchpad ist viel mehr als eine reine Code-Hosting-Plattform. Es ist genauso wie auf Github möglich, die Plattform als Bugtracker zu nutzen. Gleichzeitig bietet Launchpad aber zusätzlich noch ein wirklich wunderbares Web-Interface für Übersetzungen auf Basis gettexts und eine Frage-Antwort-Abteilung, die bei Github in die Issues-Abteilung integriert ist. Was aber wahrscheinlich die bekannteste Funktion Launchpad ist, ist die Möglichkeit mit den PPAs (Personal Package Archiv) anderen Leuten seine Programme als DEB-Paket zur Verfügung zu stellen.&lt;/p&gt;
&lt;h1 id=&#34;fazit&#34;&gt;Fazit&lt;/h1&gt;
&lt;p&gt;Eigentlich braucht es weder Github noch Launchpad. Theoretisch könnte man einfach einen Webserver benutzen und darauf seine Git-Repos hosten (oder man macht das mit NFS-Freigaben, dann kann man sogar den Webserver wegsparen), aber Github und Launchpad, machen einem das Leben aber deutlich einfacher. Wer allerdings unbedingt Bazaar als VCS haben möchte, sollte sich Launchpad unbedingt mal ansehen.&lt;/p&gt;
&lt;h2 id=&#34;meine-verwendung&#34;&gt;Meine Verwendung&lt;/h2&gt;
&lt;p&gt;Ich hoste meine meisten Projekte aktuell auf Github. Zum einen finde ich die Oberfläche intuitiever. Zum Anderen hat Github aber auch so viele Nutzer (und macht es diesen im Webinterface einfacher, sich an Projekten zu beteiligen), dass es wahrscheinlicher ist, dass sich mehr Leute an meinen Projekten beteiligen. Launchpad hat mit den PPAs allerdings auch einen Riesenvorteil.&lt;/p&gt;
&lt;h3 id=&#34;beispiel-mybrowse&#34;&gt;Beispiel MyBrowse&lt;/h3&gt;
&lt;p&gt;Bei MyBrowse mache ich das folgendermaßen:&lt;/p&gt;
&lt;p&gt;Der Quellcode liegt auf Github und dort wird auch entwickelt (da MyBrowse keine Lokalisierung braucht, brauche ich dieses wirklich tolle Feature Launchpads hier nicht). Launchpad importiert dann in regelmäßigen Abständen (5 Stunden) den Quellcode und baut täglich in mein testing-PPA die Pakete. Von dort kopiere ich dann die Pakete in das normale PPA.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Grafische Tools für Git</title>
      <link>https://kaiserbarbarossa.github.io/post/2021/01/31/grafische-git-tools/</link>
      <pubDate>Sun, 31 Jan 2021 20:01:46 +0100</pubDate>
      
      <guid>https://kaiserbarbarossa.github.io/post/2021/01/31/grafische-git-tools/</guid>
      <description>&lt;p&gt;Git, die Versionsverwaltung, die in meinen Augen als Notlösung startete und heute eines der besten Versionsverwaltungssysteme ist, ist eigentlich ein reines Kommandozeilentool. Mit den Grundfunktionen habe ich mich mittlerweile auch ein wenig eingearbeitet. Jetzt gibt es aber immer wieder Momente, wo ich dann doch den Commit-Verlauf grafisch sehen möchte. Meine Favoriten:&lt;/p&gt;
&lt;h2 id=&#34;gitg&#34;&gt;gitg&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;../Bildschirmfoto_gitg.png&#34; alt=&#34;Bildschirmfoto von gitg&#34; title=&#34;gitg&#34;&gt;&lt;/p&gt;
&lt;p&gt;Gitg ist super im grafischen Darstellen von Commitverläufen. Unter Ubuntu ist es mit folgendem Befehl installierbar:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install gitg
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;thunar-vcs-plugin&#34;&gt;thunar-vcs-plugin&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;../Bildschirmfoto_thunar-vcs.png&#34; alt=&#34;Bildschirmfoto von thunar-vcs-plugin&#34; title=&#34;thunar-vcs-plugin&#34;&gt;&lt;/p&gt;
&lt;p&gt;Der Dateimanager der Desktopumgebung XFCE, Thunar, ist durch Plugins und sog. benutzerdefinierte Aktionen erweiterbar. Eines dieser Plugins rüstet eine Unterstützung für Subversion und Git nach. Installierbar passenderweise über das Paket &lt;strong&gt;thunar-vcs-plugin&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; sudo apt-get install thunar-vcs-plugin
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;atom&#34;&gt;Atom&lt;/h2&gt;
&lt;p&gt;Atom ist vielmehr als einfach ein Programm für git. Es ist der von Github entwickelte Texteditor mit Unterstützung für Syntaxhighlighting mehrerer Sprachen, Plugins, eigenen Stylesheets sowie einer Git- und einer Github-Integration&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
