<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programme on Mein Schmierzettel</title>
    <link>https://kaiserbarbarossa.github.io/tags/programme/</link>
    <description>Recent content in Programme on Mein Schmierzettel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-de</language>
    <lastBuildDate>Fri, 26 Feb 2021 15:55:31 +0100</lastBuildDate><atom:link href="https://kaiserbarbarossa.github.io/tags/programme/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Mybrowse 0.3 ist da</title>
      <link>https://kaiserbarbarossa.github.io/post/2021/02/26/mybrowse-0-3-ist-da/</link>
      <pubDate>Fri, 26 Feb 2021 15:55:31 +0100</pubDate>
      
      <guid>https://kaiserbarbarossa.github.io/post/2021/02/26/mybrowse-0-3-ist-da/</guid>
      <description>&lt;p&gt;Vor 15 Tagen habe ich die Version 0.2.2 von MyBrowse veröffentlicht und heute ist Version 0.3 dran. Da die Menge der Änderungen doch recht groß ist, habe ich mich dafür entschieden 0.3 zu veröffentlichen und nicht 0.2.3 oder etwas ähnliches.&lt;/p&gt;
&lt;p&gt;Folgende &lt;a href=&#34;https://github.com/KaiserBarbarossa/MyBrowse/compare/v0.2.2...v0.3&#34;&gt;Änderungen&lt;/a&gt;  sind jetzt da:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Der User-Agent von Firefox wird als Standard verwendet&lt;/li&gt;
&lt;li&gt;die Addressleiste wurde um eine blaue Fortschrittsanzeige erweitert&lt;/li&gt;
&lt;li&gt;auf Anregung von &lt;a href=&#34;https://ubuntuusers.de/user/ChickenLipsRFun2eat/&#34;&gt;ChickenLipsRFun2eat&lt;/a&gt; wird die Addressleiste jetzt auch als Kommandozeile verwendet&lt;/li&gt;
&lt;li&gt;einen Starter für’s Startmenü!&lt;/li&gt;
&lt;li&gt;Tastenkombinationen&lt;/li&gt;
&lt;li&gt;Chronik&lt;/li&gt;
&lt;li&gt;das Fenster ist standardmäßig maximiert&lt;/li&gt;
&lt;li&gt;beim Hovern über einen Link wird dieser in der Addressleiste angezeigt&lt;/li&gt;
&lt;li&gt;das Browser-Icon des Systemes wird verwendet&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Außerdem ist die Addressleiste in eine eigene Zeile gewandert. Als Grundstock für die GTK-Tabs, die ich hoffentlich auch bald einbaue.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ganzen Inhalt in Hugo-Feeds anzeigen</title>
      <link>https://kaiserbarbarossa.github.io/post/2021/02/15/ganzen-inhalt-in-feeds-anzeigen/</link>
      <pubDate>Mon, 15 Feb 2021 22:40:19 +0100</pubDate>
      
      <guid>https://kaiserbarbarossa.github.io/post/2021/02/15/ganzen-inhalt-in-feeds-anzeigen/</guid>
      <description>&lt;p&gt;Standardmäßig zeigt Hugo nur den Anfang eines Artikels in den Feeds an.&lt;/p&gt;
&lt;p&gt;Will man dies ändern kann man wie folgt vorgehen:&lt;/p&gt;
&lt;p&gt;Normalerweise sollte man nicht die Themes direkt unter &lt;code&gt;themes/&lt;/code&gt; bearbeiten. Stattdessen sollte man die Vorlagen nach &lt;code&gt;layouts&lt;/code&gt; kopieren und dort bearbeiten beziehungsweise aus dem Git-Repo dorthin herunterladen. Also folgende Befehle ausgehend von dem Pfad des Blogs:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd layouts/_default
wget https://raw.githubusercontent.com/gohugoio/hugo/master/tpl/tplimpl/embedded/templates/_default/rss.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Jetzt kann man die Datei &lt;code&gt;rss.xml&lt;/code&gt; editieren und die Zeile&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;description&amp;gt;{{ .Summary | html }}&amp;lt;/description&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;durch&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;description&amp;gt;{{- .Content | html -}}&amp;lt;/description&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Danach muss man die Seite neu bauen.&lt;/p&gt;
&lt;p&gt;Gefunden hatte ich die Lösung &lt;a href=&#34;https://blog.eternalrecurrence.space/posts/displaying-the-full-content-in-hugo-rss-feed/&#34;&gt;hier&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Xfce: Themes auf der Kommandozeile auswählen</title>
      <link>https://kaiserbarbarossa.github.io/post/2021/02/15/xfce-themes-auf-der-kommandozeile-anpassen/</link>
      <pubDate>Mon, 15 Feb 2021 22:09:15 +0100</pubDate>
      
      <guid>https://kaiserbarbarossa.github.io/post/2021/02/15/xfce-themes-auf-der-kommandozeile-anpassen/</guid>
      <description>&lt;p&gt;Xfconf, also Xfces Konfigurationsmanager, bietet die Möglichkeit die Konfiguration nicht nur über die grafische Oberfläche sondern auch über die Kommandozeile zu nutzen. Dies ist zum Beispiel in Skripten nützlich.&lt;/p&gt;
&lt;p&gt;Das Theme lässt sich folgender Maßen anpassen:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;xfconf-query -c xsettings -p /Net/ThemeName -s &amp;lt;NameDesThemas&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Und der Iconsatz lässt sich folgendermaßen anpassen:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;xfconf-query -c xsettings -p /Net/IconThemeName -s &amp;lt;NameDesIconthemes&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So lässt sich bspw. ein Skript erstellen. Ich habe mir also zwei Skripte erstellt, die zwischen einem hellen und einem dunklen Theme wechseln.&lt;/p&gt;
&lt;p&gt;Theoretisch könnte man dies auch in einem Skript z.B. wie folgt zusammenfassen.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash
if [ &amp;quot;$1&amp;quot; == &amp;quot;light&amp;quot; ]
    then
        xfconf-query -c xsettings -p /Net/ThemeName -s Adapta
        xfconf-query -c xsettings -p /Net/IconThemeName -s Papirus-Adapta
        notify-send &amp;quot;Theme&amp;quot; &amp;quot;Helles Theme aktiviert&amp;quot;
    elif [ &amp;quot;$1&amp;quot; == &amp;quot;dark&amp;quot; ]
        then
            xfconf-query -c xsettings -p /Net/ThemeName -s Adapta-Nokto
            xfconf-query -c xsettings -p /Net/IconThemeName -s Papirus-Adapta-Nokto
            notify-send &amp;quot;Theme&amp;quot; &amp;quot;Dunkles Theme aktiviert&amp;quot;
    else
        echo &amp;quot;Fehlendes oder falsches Argument. Beende...&amp;quot;
        exit 1
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Wenn man das Skript jetzt also mit dem Argument &amp;ldquo;light&amp;rdquo; aufruft, würden ein helles Theme und ein helles Icontheme aktiviert und mit dem Argument &amp;ldquo;dark&amp;rdquo; mit einem entsprechenden dunklen Design. Die Themen müsste man natürlich entsprechend den eigenen Vorlieben anpassen&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Warum schreibt man einen eigenen Browser?</title>
      <link>https://kaiserbarbarossa.github.io/post/2021/02/14/warum-einen-eigenen-browser/</link>
      <pubDate>Sun, 14 Feb 2021 17:05:45 +0100</pubDate>
      
      <guid>https://kaiserbarbarossa.github.io/post/2021/02/14/warum-einen-eigenen-browser/</guid>
      <description>&lt;p&gt;Ich frage mich, warum ich hier eigentlich gar nicht über MyBrowse berichte. Viel mehr Infos darüber findet man tatsächlich im entsprechenden &lt;a href=&#34;https://forum.ubuntuusers.de/topic/mybrowse-ein-simpler-webkitbrowser-in-python/&#34;&gt;Thread&lt;/a&gt; auf ubuntuusers. Das will ich hiermit ändern und vor allem meine Ambition und meine Ziele dahinter klarmachen.&lt;/p&gt;
&lt;h1 id=&#34;warum&#34;&gt;Warum?&lt;/h1&gt;
&lt;p&gt;Computer sind viel zu schnell zu alt. Ich selber bin stolzer Nutzer eines ca. 10 Jahre alten Notebookes und muss demzufolge mit Restriktionen rechnen. Die meisten Browser wie Firefox (und &lt;strong&gt;auch&lt;/strong&gt; der oftmals als viel schneller und ressourcenschonender dargestellte Chrom{e/ium} frisst Ressourcen)&lt;/p&gt;
&lt;p&gt;Firefox ist ein toller Browser! Wirklich! Aber er ist halt sicher nicht der ressourcenschonenste.&lt;/p&gt;
&lt;p&gt;Viele Browser vergessen, wofür ein Webbrowser da ist. Man vergisst, dass ein Webbrowser Internetseiten darstellen soll und nicht noch zwei dutzend andere Dinge machen soll, auch wenn für mich ein bisschen Komfort beim Surfen dazugehört. Aber eben alles in Maßen.&lt;/p&gt;
&lt;p&gt;Es gibt für mich aktuell genau einen Browser, der alle diese Bedingungen erfüllt und das ist meiner Meinung nach &lt;a href=&#34;https://www.uninformativ.de/git/lariza/&#34;&gt;Lariza&lt;/a&gt;. Da ich aber nicht so hohe Anforderungen an einen Browser habe, habe ich also beschlossen, einen eigenen Browser zu programmieren, auch auf Basis WebKits sowie in Python.&lt;/p&gt;
&lt;p&gt;Was mich auch gestört hat, ist das viele Browser meinen, dass man einen eigenen Stil festlegen soll. Warum lege ich denn GTK-Themes fest, wenn jedes Programm dann doch eigene Farben definiert.&lt;/p&gt;
&lt;p&gt;Ein anderer Hintergrundgedanke für mich war, dass meine Pythonkenntnisse im Moment eher als rudimentär zu bezeichnen sind und ich diese so ausbauen will.&lt;/p&gt;
&lt;p&gt;So entstand innerhalb eines Tages die erste laufende Version von MyBrowse, die ich auch kurz darauf im o.g. Thread bekanntgab.&lt;/p&gt;
&lt;h1 id=&#34;quo-vadis&#34;&gt;Quo vadis?&lt;/h1&gt;
&lt;p&gt;MyBrowse ist &lt;strong&gt;mein&lt;/strong&gt; Webbrowser. Ich habe ihn als Ersatz für Firefox auf meinem Notebook geschrieben und habe meine eigenen Anforderungen an einen Browser.&lt;/p&gt;
&lt;p&gt;Von daher versteht es sich denke ich von selbst, dass ich gerne Ideen und Gedanken anderer Nutzer aufgreife, aber nicht alles umsetze. Ich möchte einen Browser, der auf mich zugeschnitten ist und der meine Anforderungen trifft. Auf keinen Fall möchte ich, dass daraus so ein wunderbarer, aber aufgeblähter, Browser wie Firefox entsteht, sondern dass es endlich einen Browser gibt, der auch für Systeme älteren Semesters funktioniert.&lt;/p&gt;
&lt;p&gt;Ich hoffe, dass ich hier während der Entwicklung noch mehr über MyBrowse schreiben werde.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MyBrowse</title>
      <link>https://kaiserbarbarossa.github.io/post/2021/02/07/mybrowse/</link>
      <pubDate>Sun, 07 Feb 2021 18:12:26 +0100</pubDate>
      
      <guid>https://kaiserbarbarossa.github.io/post/2021/02/07/mybrowse/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;../mybrowse.png&#34; alt=&#34;Bildschirmfoto&#34; title=&#34;MyBrowse&#34;&gt;&lt;/p&gt;
&lt;p&gt;Kurz notiert: Vor ein paar Tagen hatte ich beschlossen einen eigenen WebKit-Browser in Python zu schreiben.&lt;/p&gt;
&lt;p&gt;Den Quellcode findet man unter &lt;a href=&#34;https://github.com/KaiserBarbarossa/MyBrowse.git&#34;&gt;https://github.com/KaiserBarbarossa/MyBrowse.git&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Mehr zu meinen Ambitionen den Browser betreffend habe ich im ubuntuusers-Forum geschrieben: &lt;a href=&#34;https://forum.ubuntuusers.de/post/9227690/&#34;&gt;https://forum.ubuntuusers.de/post/9227690/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Grafische Tools für Git</title>
      <link>https://kaiserbarbarossa.github.io/post/2021/01/31/grafische-git-tools/</link>
      <pubDate>Sun, 31 Jan 2021 20:01:46 +0100</pubDate>
      
      <guid>https://kaiserbarbarossa.github.io/post/2021/01/31/grafische-git-tools/</guid>
      <description>&lt;p&gt;Git, die Versionsverwaltung, die in meinen Augen als Notlösung startete und heute eines der besten Versionsverwaltungssysteme ist, ist eigentlich ein reines Kommandozeilentool. Mit den Grundfunktionen habe ich mich mittlerweile auch ein wenig eingearbeitet. Jetzt gibt es aber immer wieder Momente, wo ich dann doch den Commit-Verlauf grafisch sehen möchte. Meine Favoriten:&lt;/p&gt;
&lt;h2 id=&#34;gitg&#34;&gt;gitg&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;../Bildschirmfoto_gitg.png&#34; alt=&#34;Bildschirmfoto von gitg&#34; title=&#34;gitg&#34;&gt;&lt;/p&gt;
&lt;p&gt;Gitg ist super im grafischen Darstellen von Commitverläufen. Unter Ubuntu ist es mit folgendem Befehl installierbar:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install gitg
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;thunar-vcs-plugin&#34;&gt;thunar-vcs-plugin&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;../Bildschirmfoto_thunar-vcs.png&#34; alt=&#34;Bildschirmfoto von thunar-vcs-plugin&#34; title=&#34;thunar-vcs-plugin&#34;&gt;&lt;/p&gt;
&lt;p&gt;Der Dateimanager der Desktopumgebung XFCE, Thunar, ist durch Plugins und sog. benutzerdefinierte Aktionen erweiterbar. Eines dieser Plugins rüstet eine Unterstützung für Subversion und Git nach. Installierbar passenderweise über das Paket &lt;strong&gt;thunar-vcs-plugin&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; sudo apt-get install thunar-vcs-plugin
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;atom&#34;&gt;Atom&lt;/h2&gt;
&lt;p&gt;Atom ist vielmehr als einfach ein Programm für git. Es ist der von Github entwickelte Texteditor mit Unterstützung für Syntaxhighlighting mehrerer Sprachen, Plugins, eigenen Stylesheets sowie einer Git- und einer Github-Integration&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Weechat - der bessere IRC-Client</title>
      <link>https://kaiserbarbarossa.github.io/post/2021/01/27/weechat/</link>
      <pubDate>Wed, 27 Jan 2021 18:52:29 +0100</pubDate>
      
      <guid>https://kaiserbarbarossa.github.io/post/2021/01/27/weechat/</guid>
      <description>&lt;p&gt;Ich selber nutze als Messenger eigentlich nur den &lt;a href=&#34;https://wiki.ubuntuusers.de/IRC&#34;&gt;IRC&lt;/a&gt; und wurde letztens von einem Freenode-Staffer nur belächelt als ich erwähnte, dass ich Thunderbird als Client benutze. Empfohlen wurde mir für eine GTK-GUI Hexchat und für die Kommandozeile Weechat und irssi.&lt;/p&gt;
&lt;p&gt;Nach dem ich Weechat benutzte, brauche ich die anderen eigentlich gar nicht mehr, das Programm ist genial! Theoretisch funktioniert darin wohl auch Jabber, was ich aber nicht getestet habe, da der IRC mir reicht.&lt;/p&gt;
&lt;p&gt;Für Ubuntu/Debian etc. lässt sich das Programm wie folgt installieren:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install weechat weechat-plugins weechat-scripts
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Für Debian muss man im Regelfall sich das sudo wegdenken und das als Root ausführen. Starten geht einfach mit&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;weechat
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Weechat ist optimal für mich, da ich es einfach immer in Guake offen haben kann und bei Bedarf einblenden.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
